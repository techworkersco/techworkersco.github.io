# GitHub Actions Virtual Environments
# https://github.com/actions/virtual-environments/

name: Optimize Images

on:
  pull_request:
    types: [opened, reopened, synchronize, edited]

env:
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
  NEEDS_OPTIMIZE: false
  IMAGES_TO_OPTIMIZE: ""

jobs:
  detect-files:
    name: Find Images
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.DANGER_GITHUB_API_TOKEN }}

      # https://github.com/marketplace/actions/changed-files
      - name: get changed files
        id: changed-files
        uses: tj-actions/changed-files@v10

      - name: list all changed files
        run: |
          echo "Found modified files:"
          for file in ${{ steps.changed-files.outputs.all_modified_files }}; do
            echo "$file"
          done

      - name: get all images
        id: changed-images
        uses: tj-actions/changed-files@v10
        with:
          files: img

      - name: list all images
        if: steps.changed-images.outputs.any_changed == 'true'
        run: |
          echo "NEEDS_OPTIMIZE=true" >> $GITHUB_ENV
          echo "IMAGES_TO_OPTIMIZE=${{ steps.changed-images.outputs.all_modified_files }}" >> $GITHUB_ENV
          echo "Found images:"
          for file in ${{ steps.changed-images.outputs.all_modified_files }}; do
            echo "$file"
          done

  optimize-images:
    name: Optimize Images
    needs: detect-files
    runs-on: macOS-latest
    if: env.NEEDS_OPTIMIZE == 'true'
    steps:
      - name: git checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: env status
        run: |
          echo "Needs to optimize: $NEEDS_OPTIMIZE"
          echo "Found images: $IMAGES_TO_OPTIMIZE"

      - name: install ImageOptim
        run: |
          curl https://imageoptim.com/ImageOptim.tbz2 > ImageOptim.tbz2
          bzip2 -dc ImageOptim.tbz2 | tar xvf -

      - name: run ImageOptim
        run:  ImageOptim.app/Contents/MacOS/ImageOptim ${{ env.IMAGES_TO_OPTIMIZE }}

      - name: commit changes
        run: |
          git config --global user.email "${GITHUB_ACTOR}"
          git config --global user.name "${GITHUB_ACTOR}@users.noreply.github.com"
          git status
          git pull
          git add img/
          git commit -m "[automated] optimze images" || true
          git push
